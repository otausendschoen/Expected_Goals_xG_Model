names(StatsBombData_xy)
remove(StatsBombData_xy)
shots <- StatsBombData %>%
filter(type.name == "Shot", !is.na(location)) %>%
unnest_wider(location, names_sep = "_") %>%
rename(x = location_1, y = location_2)
passes <- StatsBombData %>%
filter(type.name == "Pass", !is.na(location)) %>%
unnest_wider(location, names_sep = "_") %>%
rename(x = location_1, y = location_2)
View(StatsBombData)
names(shots)
shots1 <- shots %>%
left_join(
Matches %>%
select(match_id, match_date,
competition_id = competition.competition_id,
season_id = season.season_id),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
names(shots)
shots1 <- shots %>%
left_join(
Matches %>%
select(match_id, match_date,
competition_id = competition.competition_id,
season_id = season.season_id),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
names(shots)
names(passes)
names(Matches)
names(Comps)
shots1 <- shots %>%
left_join(
Matches %>%
select(
match_id,
match_date,
competition_id = `competition.competition_id`,
season_id = `season.season_id`
),
by = "match_id"
) %>%
left_join(
Comps %>%
select(
competition_id,
season_id,
competition_name,
season_name
),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
shots1 <- shots %>%
left_join(
Matches %>%
select(match_id, match_date),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
passes1 <- passes %>%
left_join(
Matches %>%
select(match_id, match_date),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
list_cols <- sapply(shots, is.list)
names(list_cols[list_cols])
names(Comps)
unique(Comps$season_name)
unique(year(Matches$match_date))
Matches <- FreeMatches(Comps)
Matches <- Matches %>%
filter(year(match_date) >= 2000)
StatsBombData <- free_allevents(MatchesDF = Matches, Parallel = T)
remove(StatsBombData)
unique(Comps)
unique(Comps$season_name)
Matches <- FreeMatches(Comps)
Matches <- Matches %>%
filter(year(match_date) >= 2000)
StatsBombData <- free_allevents(MatchesDF = Matches, Parallel = T)
StatsBombData = allclean(StatsBombData)
shots <- StatsBombData %>%
filter(type.name == "Shot", !is.na(location)) %>%
unnest_wider(location, names_sep = "_") %>%
rename(x = location_1, y = location_2)
passes <- StatsBombData %>%
filter(type.name == "Pass", !is.na(location)) %>%
unnest_wider(location, names_sep = "_") %>%
rename(x = location_1, y = location_2)
shots1 <- shots %>%
left_join(
Matches %>%
select(match_id, match_date),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
passes1 <- passes %>%
left_join(
Matches %>%
select(match_id, match_date),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
write_csv(shots, "shots.csv")
write_csv(passes, "passes.csv")
write_csv(shots1, "shots.csv")
write_csv(passes1, "passes.csv")
head(shots$tactics.lineup)
unique(shots$tactics.lineup)
unique(passes$tactics.lineup)
unique(shots$related_events)
unique(shots$shot.freeze_frame)
shots_clean <- shots %>%
select(
-carry.end_location,
-goalkeeper.end_location,
-tactics.lineup,
-related_events,
-shot.freeze_frame,
-pass.end_location
) %>%
unnest_wider(shot.end_location, names_sep = "_") %>%
rename(
shot.end_x = shot.end_location_1,
shot.end_y = shot.end_location_2
)
passes_clean <- passes %>%
select(
-carry.end_location,
-goalkeeper.end_location,
-tactics.lineup,
-related_events,
-shot.end_location
) %>%
unnest_wider(pass.end_location, names_sep = "_") %>%
rename(
pass.end_x = pass.end_location_1,
pass.end_y = pass.end_location_2
)
# For shots_clean
names(which(sapply(shots_clean, is.list)))
# For passes_clean
names(which(sapply(passes_clean, is.list)))
passes_clean <- passes %>%
select(
-carry.end_location,
-goalkeeper.end_location,
-tactics.lineup,
-related_events,
-shot.end_location,
-shot.freeze_frame
) %>%
unnest_wider(pass.end_location, names_sep = "_") %>%
rename(
pass.end_x = pass.end_location_1,
pass.end_y = pass.end_location_2
)
write_csv(shots, "shots.csv")
write_csv(passes, "passes.csv")
write_csv(shots_clean, "shots.csv")
write_csv(passes_clean, "passes.csv")
names(shots_clean)
shots <- StatsBombData %>%
filter(type.name == "Shot", !is.na(location)) %>%
unnest_wider(location, names_sep = "_") %>%
rename(x = location_1, y = location_2)
passes <- StatsBombData %>%
filter(type.name == "Pass", !is.na(location)) %>%
unnest_wider(location, names_sep = "_") %>%
rename(x = location_1, y = location_2)
shots <- shots %>%
left_join(
Matches %>%
select(match_id, match_date),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
names(shots)
unique(shots$season_name)
rm(list=ls())
#####
#Pulling StatsBomb Free Data Into R
library(tidyverse)
library(StatsBombR)
Comps <- FreeCompetitions()
comps_shots <- Comps %>%
filter(
competition_gender == 'male',
!competition_name %in% c('FIFA U20 World Cup', 'Indian Super league', 'Major League Soccer', 'North American League')
)
Matches <- FreeMatches(Comps)
Matches_Shots <- Matches
Matches_Passes <- Matches %>%
filter(year(match_date) >= 2000)
StatsBombData_Shots <- free_allevents(MatchesDF = Matches_Shots, Parallel = T)
StatsBombData_Passes <- free_allevents(MatchesDF = Matches_Passes, Parallel = T)
StatsBombData_Shots = allclean(StatsBombData_Shots)
StatsBombData_Passes = allclean(StatsBombData_Passes)
shots <- StatsBombData_Shots %>%
filter(type.name == "Shot", !is.na(location)) %>%
unnest_wider(location, names_sep = "_") %>%
rename(x = location_1, y = location_2)
passes <- StatsBombData_Passes %>%
filter(type.name == "Pass", !is.na(location)) %>%
unnest_wider(location, names_sep = "_") %>%
rename(x = location_1, y = location_2)
shots <- shots %>%
left_join(
Matches %>%
select(match_id, match_date),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
shots_clean <- shots %>%
select(
-carry.end_location,
-goalkeeper.end_location,
-tactics.lineup,
-related_events,
-shot.freeze_frame,
-pass.end_location
) %>%
unnest_wider(shot.end_location, names_sep = "_") %>%
rename(
shot.end_x = shot.end_location_1,
shot.end_y = shot.end_location_2
)
passes <- passes %>%
left_join(
Matches %>%
select(match_id, match_date),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
passes_clean <- passes %>%
select(
-carry.end_location,
-goalkeeper.end_location,
-tactics.lineup,
-related_events,
-shot.end_location,
-shot.freeze_frame
) %>%
unnest_wider(pass.end_location, names_sep = "_") %>%
rename(
pass.end_x = pass.end_location_1,
pass.end_y = pass.end_location_2
)
names(shots_clean)
unique(shots_clean$season_name)
unique(passes_clean$season_name)
write_csv(shots_clean, "shots.csv")
write_csv(passes_clean, "passes.csv")
names(shots_clean)
View(StatsBombData_Shots)
unique(shots_clean$competition_name)
setwd("~/Desktop/BSE/Term 2/Geospatial Data Science and Economic Data Models/Football_Analysis")
#####
#Pulling StatsBomb Free Data Into R
library(tidyverse)
library(StatsBombR)
Comps <- FreeCompetitions()
comps_shots <- Comps %>%
filter(
competition_gender == 'male',
!competition_name %in% c('FIFA U20 World Cup', 'Indian Super league', 'Major League Soccer', 'North American League')
)
Matches <- FreeMatches(comps_shots)
Matches_Shots <- Matches
Matches_Passes <- Matches %>%
filter(year(match_date) >= 2000)
StatsBombData_Shots <- free_allevents(MatchesDF = Matches_Shots, Parallel = T)
StatsBombData_Passes <- free_allevents(MatchesDF = Matches_Passes, Parallel = T)
StatsBombData_Shots = allclean(StatsBombData_Shots)
StatsBombData_Passes = allclean(StatsBombData_Passes)
shots <- StatsBombData_Shots %>%
filter(type.name == "Shot", !is.na(location)) %>%
unnest_wider(location, names_sep = "_") %>%
rename(x = location_1, y = location_2)
passes <- StatsBombData_Passes %>%
filter(type.name == "Pass", !is.na(location)) %>%
unnest_wider(location, names_sep = "_") %>%
rename(x = location_1, y = location_2)
shots <- shots %>%
left_join(
Matches %>%
select(match_id, match_date),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
shots_clean <- shots %>%
select(
-carry.end_location,
-goalkeeper.end_location,
-tactics.lineup,
-related_events,
-shot.freeze_frame,
-pass.end_location
) %>%
unnest_wider(shot.end_location, names_sep = "_") %>%
rename(
shot.end_x = shot.end_location_1,
shot.end_y = shot.end_location_2
)
passes <- passes %>%
left_join(
Matches %>%
select(match_id, match_date),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
passes_clean <- passes %>%
select(
-carry.end_location,
-goalkeeper.end_location,
-tactics.lineup,
-related_events,
-shot.end_location,
-shot.freeze_frame
) %>%
unnest_wider(pass.end_location, names_sep = "_") %>%
rename(
pass.end_x = pass.end_location_1,
pass.end_y = pass.end_location_2
)
write_csv(shots_clean, "shots.csv")
write_csv(passes_clean, "passes.csv")
unique(shots_clean$competition_name)
View(StatsBombData_Shots)
names(StatsBombData_Shots)
shots <- StatsBombData_Shots %>%
filter(type.name == "Shot")
passes <- StatsBombData_Passes %>%
filter(type.name == "Pass")
table(StatsBombData_Shots$type.name)
gc()
rm(list=ls())
library(tidyverse)
library(StatsBombR)
Comps <- FreeCompetitions()
View(Comps)
comps_clean <- Comps %>%
filter(
competition_gender == 'male',competition_youth == FALSE)
View(comps_clean)
comps_clean <- Comps %>%
filter(
competition_gender == 'male',competition_youth == FALSE)
!competition_name %in% c('FIFA U20 World Cup', 'Indian Super league', 'Major League Soccer', 'North American League')
comps_clean <- Comps %>%
filter(
competition_gender == 'male',competition_youth == FALSE)
!competition_name %in% c('FIFA U20 World Cup', 'Indian Super league', 'Major League Soccer', 'North American League')
comps_clean <- Comps %>%
filter(
competition_gender == 'male',competition_youth == FALSE),
comps_clean <- Comps %>%
filter(
competition_gender == 'male',competition_youth == FALSE,
!competition_name %in% c('FIFA U20 World Cup', 'Indian Super league', 'Major League Soccer', 'North American League'))
View(comps_clean)
Matches <- FreeMatches(comps_shots)
Matches <- FreeMatches(comps_clean)
Matches_Shots <- Matches
Matches_Passes <- Matches %>%
filter(year(match_date) >= 2000)
View(Matches)
unique(Matches$season.season_name)
unique(Matches$competition.competition_name)
remove(Matches)
remove(Matches_Shots)
remove(Matches_Passes)
Matches_Shots <- FreeMatches(comps_clean)
Matches_Passes <- Matches_Shots %>%
filter(year(match_date) >= 2000)
StatsBombData_Shots <- free_allevents(MatchesDF = Matches_Shots, Parallel = T)
#####
#Pulling StatsBomb Free Data Into R
library(tidyverse)
library(StatsBombR)
Comps <- FreeCompetitions()
comps_clean <- Comps %>%
filter(
competition_gender == 'male',competition_youth == FALSE,
!competition_name %in% c('FIFA U20 World Cup', 'Indian Super league', 'Major League Soccer', 'North American League'))
Matches_Shots <- FreeMatches(comps_clean)
Matches_Passes <- Matches_Shots %>%
filter(year(match_date) >= 2000)
StatsBombData_Shots <- free_allevents(MatchesDF = Matches_Shots, Parallel = T)
StatsBombData_Passes <- free_allevents(MatchesDF = Matches_Passes, Parallel = T)
StatsBombData_Shots = allclean(StatsBombData_Shots)
View(StatsBombData_Shots)
shots <- StatsBombData_Shots %>%
filter(type.name == "Shot")
table(shots$competition_id)
shots <- shots %>%
left_join(
Matches_Shots %>%
select(match_id, match_date),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
table(shots$competition_name)
StatsBombData_Passes = allclean(StatsBombData_Passes)
mem.maxVSize()
StatsBombData_Passes <- allclean(free_allevents(MatchesDF = Matches_Passes, Parallel = T))
StatsBombData_Shots <- allclean(free_allevents(MatchesDF = Matches_Shots, Parallel = T))
shots <- StatsBombData_Shots %>%
filter(type.name == "Shot")
passes <- StatsBombData_Passes %>%
filter(type.name == "Pass")
shots <- shots %>%
left_join(
Matches_Shots %>%
select(match_id, match_date),
by = "match_id"
) %>%
left_join(
Comps %>%
select(competition_id, season_id, competition_name, season_name),
by = c("competition_id", "season_id")
) %>%
mutate(match_date = as.Date(match_date))
table(shots$competition_name)
gc()
gc()
rm(list=ls())
library(tidyverse)
library(StatsBombR)
Comps <- FreeCompetitions()
comps_clean <- Comps %>%
filter(
competition_gender == 'male',competition_youth == FALSE,
!competition_name %in% c('FIFA U20 World Cup', 'Indian Super league', 'Major League Soccer', 'North American League'))
Matches_Shots <- FreeMatches(comps_clean)
StatsBombData_Shots <- allclean(free_allevents(MatchesDF = Matches_Shots, Parallel = T))
StatsBombData_Shots <- free_allevents(MatchesDF = Matches_Shots, Parallel = T)
warnings()
View(StatsBombData_Shots)
names(StatsBombData_Shots)
StatsBombData_Shots1 = allclean(StatsBombData_Shots)
shots <- StatsBombData_Shots1 %>%
filter(type.name == "Shot")
rm(list=ls())
gc()
